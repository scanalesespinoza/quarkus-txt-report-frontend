<project xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <!-- Parent BOM de Quarkus 3.23.0 -->
    <parent>
        <groupId>io.quarkus</groupId>
        <artifactId>quarkus-bom</artifactId>
        <version>3.23.0</version>
        <relativePath /> <!-- buscar en repositorios remotos -->
    </parent>

    <groupId>com.scanales.quarkus</groupId>
    <artifactId>txt-report-frontend</artifactId>
    <version>1.0.0</version>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <!-- Asegurar que el plugin de Quarkus use la misma versión que el BOM -->
        <quarkus-plugin.version>3.23.0</quarkus-plugin.version>
        <!-- Java 17 LTS (soportado por Quarkus 3.x) -->
        <maven.compiler.source>17</maven.compiler.source>
        <maven.compiler.target>17</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <!-- Activar arranque “lazy” para iniciar más rápido en contenedor -->
        <quarkus.arc.lazy-init>true</quarkus.arc.lazy-init>
    </properties>

    <dependencies>
        <!-- Arrastra runtime HTTP + common -->
        <dependency>
            <groupId>io.quarkus</groupId>
            <artifactId>quarkus-vertx-http</artifactId>
        </dependency>

        <!-- CDI / Beans -->
        <dependency>
            <groupId>io.quarkus</groupId>
            <artifactId>quarkus-arc</artifactId>
        </dependency>

        <!-- REST (reemplaza a resteasy-reactive) -->
        <dependency>
            <groupId>io.quarkus</groupId>
            <artifactId>quarkus-rest</artifactId>
        </dependency>
        <!-- Si necesitas JSON: -->
        <dependency>
            <groupId>io.quarkus</groupId>
            <artifactId>quarkus-rest-jsonb</artifactId>
        </dependency>

        <!-- Qute (templates) -->
        <dependency>
            <groupId>io.quarkus</groupId>
            <artifactId>quarkus-qute</artifactId>
        </dependency>

        <!-- Scheduler (StartupEvent / @Observes) -->
        <dependency>
            <groupId>io.quarkus</groupId>
            <artifactId>quarkus-scheduler</artifactId>
        </dependency>

        <!-- Container image con Jib (compatible con Podman) -->
        <dependency>
            <groupId>io.quarkus</groupId>
            <artifactId>quarkus-container-image-jib</artifactId>
        </dependency>

        <!-- 1) SmallRye Health para liveness/readiness personalizados -->
        <dependency>
            <groupId>io.quarkus</groupId>
            <artifactId>quarkus-smallrye-health</artifactId>
        </dependency>

        <!-- 2) Micrometer (export Prometheus) junto con el binder de métricas básicas -->
        <dependency>
            <groupId>io.quarkus</groupId>
            <artifactId>quarkus-micrometer</artifactId>
        </dependency>

        <!-- 3) MicroProfile Metrics API (para @Metric, Counter, etc.) -->
        <dependency>
            <groupId>io.quarkus</groupId>
            <artifactId>quarkus-smallrye-metrics</artifactId>
        </dependency>

    </dependencies>

    <build>
        <plugins>
            <!-- Forzar compilación con Java 17 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.10.1</version>
                <configuration>
                    <source>${maven.compiler.source}</source>
                    <target>${maven.compiler.target}</target>
                </configuration>
            </plugin>

            <!-- Quarkus Maven Plugin -->
            <plugin>
                <groupId>io.quarkus</groupId>
                <artifactId>quarkus-maven-plugin</artifactId>
                <version>${quarkus-plugin.version}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>build</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>