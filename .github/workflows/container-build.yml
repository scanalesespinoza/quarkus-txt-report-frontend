name: Build Container Image

on:
  workflow_dispatch:
    inputs:
      image-tag:
        description: Container image tag (defaults to pom version)
        required: false
  push:
    tags:
      - "v*"

env:
  REGISTRY: quay.io
  IMAGE_REPOSITORY: sergio_canales_e/quarkus/txt-report-frontend

jobs:
  container:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: "21"
          distribution: "temurin"

      - name: Cache Maven repository
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Resolve image tag
        id: meta
        run: |
          if [ -n "${{ github.event.inputs.image-tag }}" ]; then
            tag="${{ github.event.inputs.image-tag }}"
          elif [[ "${GITHUB_REF}" == refs/tags/v* ]]; then
            tag="${GITHUB_REF_NAME#v}"
          else
            tag="$(./mvnw help:evaluate -Dexpression=project.version -q -DforceStdout)"
          fi
          echo "tag=$tag" >> "$GITHUB_OUTPUT"
          echo "Resolved image tag: $tag"

      - name: Log in to Quay.io
        if: ${{ secrets.QUAY_USERNAME != '' && secrets.QUAY_PASSWORD != '' }}
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_PASSWORD }}

      - name: Build native executable and container image
        run: |
          ./mvnw clean package \
            -Dquarkus.package.type=native \
            -Dquarkus.native.container-build=true \
            -Dquarkus.native.container-runtime=docker \
            -Dquarkus.container-image.builder=docker \
            -Dquarkus.container-image.build=true \
            -Dquarkus.container-image.registry=${REGISTRY} \
            -Dquarkus.container-image.group=${IMAGE_REPOSITORY%/*} \
            -Dquarkus.container-image.name=${IMAGE_REPOSITORY##*/} \
            -Dquarkus.container-image.tag=${{ steps.meta.outputs.tag }} \
            -Dquarkus.container-image.push=${{ secrets.QUAY_USERNAME != '' && secrets.QUAY_PASSWORD != '' }}
