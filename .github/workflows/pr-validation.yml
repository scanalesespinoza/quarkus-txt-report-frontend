name: PR Validation

on:
  pull_request:
    branches:
      - main
    types:
      - opened
      - synchronize
      - reopened
      - ready_for_review
      - closed

jobs:
  verify:
    if: github.event.action != 'closed'
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Cache Maven repository
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Build and test
        run: ./mvnw -B verify

  automerge:
    needs: verify
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    if: >
      github.event.action != 'closed' &&
      github.event.pull_request.draft == false &&
      github.event.pull_request.base.ref == 'main'
    steps:
      - name: Enable auto-merge
        uses: peter-evans/enable-pull-request-automerge@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          merge-method: squash

  delete_branch:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    if: |
      github.event.action == 'closed' &&
      github.event.pull_request.merged == true &&
      github.event.pull_request.base.ref == 'main' &&
      github.event.pull_request.head.repo.full_name == github.repository
    steps:
      - name: Delete merged branch
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const branch = context.payload.pull_request.head.ref;
            if (branch && branch !== context.payload.pull_request.base.ref) {
              try {
                await github.rest.git.deleteRef({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  ref: `heads/${branch}`,
                });
              } catch (error) {
                if (![404, 422].includes(error.status)) {
                  throw error;
                }
              }
            }
