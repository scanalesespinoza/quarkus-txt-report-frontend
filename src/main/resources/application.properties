# ------------------------------
# GENERAL / HTTP
# ------------------------------
# Bindring a 0.0.0.0 y puerto único
quarkus.http.host=${HTTP_HOST:0.0.0.0}
quarkus.http.port=${HTTP_PORT:8080}

# Forzar UTF-8
quarkus.http.encoding.enabled=true
quarkus.http.encoding.charset=UTF-8

# Lazy init (arranque rápido)
quarkus.arc.lazy-init=${QUARKUS_ARC_LAZY_INIT:true}

# ------------------------------
# ROTACIÓN FIFO (Cache de Reports)
# ------------------------------
# Capacidad de reportes: env var o 16000 por defecto
app.max-reports=${MAX_REPORTS:16000}

# ------------------------------
# HEALTHCHECKS (SmallRye)
# ------------------------------
quarkus.health.root-path=/health
quarkus.health.liveness-path=/health/live
quarkus.health.readiness-path=/health/ready

# ------------------------------
# METRICS (Micrometer)
# ------------------------------
quarkus.micrometer.export.prometheus.path=/metrics
quarkus.micrometer.binder.jvm.enabled=true
quarkus.micrometer.binder.system.enabled=true
quarkus.micrometer.binder.process.enabled=true

# ------------------------------
# LOGGING
# ------------------------------
# Nivel por defecto, se puede sobreescribir via env. 
# Ej: export QUARKUS_LOG_CONSOLE_LEVEL=DEBUG
quarkus.log.console.level=${QUARKUS_LOG_CONSOLE_LEVEL:INFO}
quarkus.log.console.json=false

# Opcional: redirigir logs a archivo 
#quarkus.log.file.enable=true
#quarkus.log.file.path=/logs/app.log
#quarkus.log.file.level=${QUARKUS_LOG_FILE_LEVEL:DEBUG}

# ------------------------------
# CONTAINER IMAGE (Jib/Podman/Quay)
# ------------------------------
quarkus.native.container-build=true
quarkus.container-image.builder=${CONTAINER_BUILDER:podman}
quarkus.container-image.build=true
quarkus.container-image.push=true
quarkus.container-image.registry=${CONTAINER_REGISTRY:quay.io}
quarkus.container-image.group=${CONTAINER_GROUP:mi_grupo}
quarkus.container-image.name=${CONTAINER_NAME:txt-report-frontend}
quarkus.container-image.tag=${CONTAINER_TAG:stable-1.0.0}
